"""add_user_table

Revision ID: 4c2b25f97975
Revises: b9127e78dae4
Create Date: 2025-05-31 00:11:39.749463

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "4c2b25f97975"
down_revision: Union[str, None] = "b9127e78dae4"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "exportation",
        sa.Column("year", sa.Integer(), nullable=False),
        sa.Column("country", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("quantity_kg", sa.Float(), nullable=False),
        sa.Column("value", sa.Float(), nullable=False),
        sa.Column("path", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_exportation_country"), "exportation", ["country"], unique=False
    )
    op.create_index(op.f("ix_exportation_path"), "exportation", ["path"], unique=False)
    op.create_index(op.f("ix_exportation_year"), "exportation", ["year"], unique=False)
    op.create_table(
        "user",
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("full_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "hashed_password", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)

    # Create ENUM types first
    processing_category_enum = sa.Enum(
        "VINIFERA",
        "AMERICANAS",
        "MESA",
        "SEM_CLASSIFICACAO",
        name="processing_category",
    )
    processing_subcategory_enum = sa.Enum(
        "TINTAS", "BRANCAS", "BRANCAS_E_ROSADAS", name="processing_subcategory"
    )
    production_category_enum = sa.Enum(
        "VINHO_DE_MESA",
        "VINHO_FINO_DE_MESA_VINIFERA",
        "SUCO",
        "DERIVADOS",
        name="production_category",
    )

    processing_category_enum.create(op.get_bind(), checkfirst=True)
    processing_subcategory_enum.create(op.get_bind(), checkfirst=True)
    production_category_enum.create(op.get_bind(), checkfirst=True)

    # Now alter columns to use the ENUM types
    op.alter_column(
        "processing",
        "category",
        existing_type=sa.VARCHAR(),
        type_=processing_category_enum,
        existing_nullable=False,
        postgresql_using="category::processing_category",
    )
    op.alter_column(
        "processing",
        "subcategory",
        existing_type=sa.VARCHAR(),
        type_=processing_subcategory_enum,
        existing_nullable=False,
        postgresql_using="subcategory::processing_subcategory",
    )
    op.alter_column(
        "production",
        "category",
        existing_type=sa.VARCHAR(),
        type_=production_category_enum,
        existing_nullable=False,
        postgresql_using="category::production_category",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "production",
        "category",
        existing_type=sa.Enum(
            "VINHO_DE_MESA",
            "VINHO_FINO_DE_MESA_VINIFERA",
            "SUCO",
            "DERIVADOS",
            name="production_category",
        ),
        type_=sa.VARCHAR(),
        existing_nullable=False,
    )
    op.alter_column(
        "processing",
        "subcategory",
        existing_type=sa.Enum(
            "TINTAS", "BRANCAS", "BRANCAS_E_ROSADAS", name="processing_subcategory"
        ),
        type_=sa.VARCHAR(),
        existing_nullable=False,
    )
    op.alter_column(
        "processing",
        "category",
        existing_type=sa.Enum(
            "VINIFERA",
            "AMERICANAS",
            "MESA",
            "SEM_CLASSIFICACAO",
            name="processing_category",
        ),
        type_=sa.VARCHAR(),
        existing_nullable=False,
    )

    # Drop ENUM types
    sa.Enum(name="production_category").drop(op.get_bind(), checkfirst=True)
    sa.Enum(name="processing_subcategory").drop(op.get_bind(), checkfirst=True)
    sa.Enum(name="processing_category").drop(op.get_bind(), checkfirst=True)

    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
    op.drop_index(op.f("ix_exportation_year"), table_name="exportation")
    op.drop_index(op.f("ix_exportation_path"), table_name="exportation")
    op.drop_index(op.f("ix_exportation_country"), table_name="exportation")
    op.drop_table("exportation")
    # ### end Alembic commands ###
